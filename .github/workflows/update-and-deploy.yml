name: Update Lunch Data and Deploy

on:
  schedule:
    # Run every day at 6:00 AM UTC (8:00 AM CEST)
    - cron: '0 6 * * 1-5'  # Monday to Friday only
  push:
    branches: [ gh-pages ]
  workflow_dispatch: # Allow manual triggering

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  scrape-and-build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        ref: gh-pages
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Install Chrome for Selenium
      run: |
        sudo apt-get update
        sudo apt-get install -y wget gnupg
        wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
        
    - name: Install ChromeDriver
      run: |
        CHROME_VERSION=$(google-chrome --version | cut -d " " -f3 | cut -d "." -f1)
        CHROMEDRIVER_VERSION=$(curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_${CHROME_VERSION}")
        wget -O /tmp/chromedriver.zip "https://chromedriver.storage.googleapis.com/${CHROMEDRIVER_VERSION}/chromedriver_linux64.zip"
        sudo unzip /tmp/chromedriver.zip chromedriver -d /usr/local/bin/
        sudo chmod +x /usr/local/bin/chromedriver
        
    - name: Get current day
      id: get-day
      run: |
        DAY=$(python -c "from utils.utils import get_today_english; print(get_today_english().lower())")
        echo "day=$DAY" >> $GITHUB_OUTPUT
        echo "Current day: $DAY"
        
    - name: Scrape lunch data for current day
      run: |
        echo "Scraping data for: ${{ steps.get-day.outputs.day }}"
        python main.py --day ${{ steps.get-day.outputs.day }} --refresh
        
    - name: Generate fresh HTML page
      run: |
        echo "Generating fresh HTML page for the current day"
        python generate_html.py
        
    - name: Copy files to deployment directory
      run: |
        # Copy the main index.html to docs if it doesn't exist there
        if [ ! -f docs/index.html ]; then
          cp index.html docs/
        fi
        # Ensure CNAME is in docs directory for custom domain
        if [ -f CNAME ]; then
          cp CNAME docs/
        fi
        
    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add data/ docs/ index.html
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Auto-update: ${{ steps.get-day.outputs.day }} lunch data $(date +'%Y-%m-%d %H:%M')"
          git push origin gh-pages
        fi

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: docs/

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: scrape-and-build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 